directive @auth on FIELD_DEFINITION
scalar Date
scalar JSON

enum UserStatus {
	ACTIVE
	INACTIVE
	PENDING
	BLOCKED
}

enum MemberRole {
	OWNER
	MEMBER
	USER
}

type User {
	id: ID!
	name: String!
	email: String!
	email_verified: Date
	status: UserStatus!
	avatar: String
}

type Member {
	id: ID!
	role: MemberRole!
	user: User!
}

type Organization {
	id: ID!
	name: String!
	avatar: String
	owner: User!
	members: [Member]
}

type GetUserResponse {
	type: String!
	status: Int!
	data: User
}

# Queries
type Query {
	hello: String!
	# getUser(id: ID!): GetUserResponse @auth
	# getAllUsers: [User!]
	# getOrganization(id: ID!): Organization
	# getAllOrganizations: [Organization!]
}

# Mutations
# type Mutation {
# 	# createUser(name: String!, email: String!, password: String): User
# 	# updateUser(
# 	# 	id: ID!
# 	# 	name: String
# 	# 	email: String
# 	# 	password: String
# 	# 	status: UserStatus
# 	# 	avatar: String
# 	# ): User
# 	# deleteUser(id: ID!): Boolean

# 	# createOrganization(name: String!, ownerId: ID!): Organization
# 	# updateOrganization(id: ID!, name: String, avatar: String): Organization
# 	# deleteOrganization(id: ID!): Boolean

# 	# addMemberToOrganization(
# 	# 	organizationId: ID!
# 	# 	userId: ID!
# 	# 	role: MemberRole
# 	# ): Organization
# 	# removeMemberFromOrganization(organizationId: ID!, memberId: ID!): Organization
# }
