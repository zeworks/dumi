generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserStatus {
  ACTIVE
  INACTIVE
  PENDING
  BLOCKED
}

enum MemberRole {
  MEMBER
  OWNER
  USER
}

model Organization {
  id         String    @id @default(cuid())
  name       String    @db.VarChar(10)
  avatar     String?
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  owner   User   @relation(fields: [ownerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  ownerId String @map("owner_id")

  members Member[]

  @@map("organizations")
}

model User {
  id            String     @id @default(cuid())
  name          String
  email         String     @unique
  emailVerified DateTime?  @map("email_verified")
  password      String?
  status        UserStatus @default(PENDING)
  avatar        String?
  created_at    DateTime?  @default(now())
  updated_at    DateTime?  @default(now())

  owns_organizations Organization[]
  member_on          Member[]

  @@map("users")
}

model Member {
  id String @id @default(cuid())

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @map("user_id")

  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  organizationId String       @map("organization_id")

  role MemberRole @default(USER)

  @@map("members")
}
